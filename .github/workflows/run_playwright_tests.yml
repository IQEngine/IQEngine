---
name: Run Playwright frontend integration tests

on:
  pull_request:
    # only runs on PRs that target main
    branches:
      - main
  workflow_dispatch:

jobs:
  playwright:
    name: RunPlaywrightTests
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: e2e
        run: npm ci

      - name: Docker build
        run: docker compose -f docker-compose-e2e.yml build
        env:
          MONGO_USERNAME: mongoadmin
          MONGO_PASSWORD: secret

      - name: Docker up
        run: docker compose -f docker-compose-e2e.yml up &
        env:
          IN_MEMORY_DB: '0'
          IQENGINE_FEATURE_FLAGS: '{"useAPIDatasources": true}'
          IQENGINE_CONNECTION_INFO: '{"settings": []}'
          MONGO_USERNAME: mongoadmin
          MONGO_PASSWORD: secret

      - name: Check build has succeeded
        uses: cygnetdigital/wait_for_response@v2.0.0
        with:
          url: 'http://localhost:3000/'
          responseCode: '200,500'
          timeout: 30000
          interval: 500

      - name: Install Playwright Browsers
        working-directory: e2e
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: e2e
        run: |
          npx playwright test --config playwright-pr.config.ts confirm_API_data_browse
          npx playwright test --config playwright-pr.config.ts confirm_api_datasource
          npx playwright test --config playwright-pr.config.ts confirm_siggen_card
          npx playwright test --config playwright-pr.config.ts confirm_validator
        env:
          IQENGINE_METADATA_DB_CONNECTION_STRING: mongodb://mongoadmin:secret@localhost:27017/admin

      - name: Docker down
        run: docker compose -f docker-compose-e2e.yml down
